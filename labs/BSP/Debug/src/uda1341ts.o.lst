   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uda1341ts.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uda1341ts.c"
 1097              	volume:
 1098 0000 00       		.space	1
 1099              	state:
 1100 0001 00       		.space	1
 1101              		.text
 1102              		.align	2
 1103              		.global	uda1341ts_init
 1105              	uda1341ts_init:
 1106              	.LFB0:
   1:../src/uda1341ts.c **** 
   2:../src/uda1341ts.c **** #include <l3.h>
   3:../src/uda1341ts.c **** #include <uda1341ts.h>
   4:../src/uda1341ts.c **** 
   5:../src/uda1341ts.c **** #define ADDRESS (0x05)
   6:../src/uda1341ts.c **** 
   7:../src/uda1341ts.c **** #define DATA0  (0x0)
   8:../src/uda1341ts.c **** #define DATA1  (0x1)	/*Nemotécnicos para identificar los registros primarios*/
   9:../src/uda1341ts.c **** #define STATUS (0x2)
  10:../src/uda1341ts.c **** 
  11:../src/uda1341ts.c **** #define EA (0x18 << 3)		/*Nemotécnicos para los prefijos de acceso*/
  12:../src/uda1341ts.c **** #define ED (0x7 << 5)		/*a los registros secundarios			*/
  13:../src/uda1341ts.c **** 
  14:../src/uda1341ts.c **** static uint8 volume;
  15:../src/uda1341ts.c **** static uint8 state;
  16:../src/uda1341ts.c **** 
  17:../src/uda1341ts.c **** /*
  18:../src/uda1341ts.c **** ** Inicializa el interfaz L3
  19:../src/uda1341ts.c **** ** Resetea el audio codec
  20:../src/uda1341ts.c **** ** Configura el audio codec según los siguientes parámetros:
  21:../src/uda1341ts.c **** **   CODECLK = 256fs
  22:../src/uda1341ts.c **** **   Protocolo de trasmisión de audio: iis
  23:../src/uda1341ts.c **** **   Volumen de reproducción máximo
  24:../src/uda1341ts.c **** **   Selecciona el canal 1 como entrada
  25:../src/uda1341ts.c **** **   Habilita el ADC y DAC con 6 dB de ganancia de entrada
  26:../src/uda1341ts.c **** **   Fija el volumen máximo
  27:../src/uda1341ts.c **** */
  28:../src/uda1341ts.c **** void uda1341ts_init( void )
  29:../src/uda1341ts.c **** {
 1107              		.loc 1 29 0
 1108              		.cfi_startproc
 1109              		@ Function supports interworking.
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112 0000 0DC0A0E1 		mov	ip, sp
 1113              	.LCFI0:
 1114              		.cfi_def_cfa_register 12
 1115 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1116 0008 04B04CE2 		sub	fp, ip, #4
 1117              		.cfi_offset 14, -8
 1118              		.cfi_offset 13, -12
 1119              		.cfi_offset 11, -16
 1120              	.LCFI1:
 1121              		.cfi_def_cfa 11, 4
  30:../src/uda1341ts.c ****     L3_init();     
 1122              		.loc 1 30 0
 1123 000c FEFFFFEB 		bl	L3_init
  31:../src/uda1341ts.c ****     
  32:../src/uda1341ts.c ****     L3_putByte( (ADDRESS << 2) | STATUS, L3_ADDR_MODE );		/*Resetea el Audio Codec*/
 1124              		.loc 1 32 0
 1125 0010 1600A0E3 		mov	r0, #22
 1126 0014 0010A0E3 		mov	r1, #0
 1127 0018 FEFFFFEB 		bl	L3_putByte
  33:../src/uda1341ts.c ****     L3_putByte( (1 << 6) | (2 << 4), L3_DATA_MODE );			/*Resetea el Audio Codec*/
 1128              		.loc 1 33 0
 1129 001c 6000A0E3 		mov	r0, #96
 1130 0020 0110A0E3 		mov	r1, #1
 1131 0024 FEFFFFEB 		bl	L3_putByte
  34:../src/uda1341ts.c ****     L3_putByte( (2 << 4), L3_DATA_MODE );						/*Quita el reset y fija frecuencia
 1132              		.loc 1 34 0
 1133 0028 2000A0E3 		mov	r0, #32
 1134 002c 0110A0E3 		mov	r1, #1
 1135 0030 FEFFFFEB 		bl	L3_putByte
  35:../src/uda1341ts.c **** 																y formato de IIS*/
  36:../src/uda1341ts.c ****     L3_putByte( (ADDRESS << 2) | DATA0, L3_ADDR_MODE  ); 		/*Selecciona el canal 1*/
 1136              		.loc 1 36 0
 1137 0034 1400A0E3 		mov	r0, #20
 1138 0038 0010A0E3 		mov	r1, #0
 1139 003c FEFFFFEB 		bl	L3_putByte
  37:../src/uda1341ts.c ****     L3_putByte( EA | (2), L3_DATA_MODE ); 						/*Selecciona el canal 1*/
 1140              		.loc 1 37 0
 1141 0040 C200A0E3 		mov	r0, #194
 1142 0044 0110A0E3 		mov	r1, #1
 1143 0048 FEFFFFEB 		bl	L3_putByte
  38:../src/uda1341ts.c ****     L3_putByte( ED | 1, L3_DATA_MODE );							/*Selecciona el canal 1*/
 1144              		.loc 1 38 0
 1145 004c E100A0E3 		mov	r0, #225
 1146 0050 0110A0E3 		mov	r1, #1
 1147 0054 FEFFFFEB 		bl	L3_putByte
  39:../src/uda1341ts.c ****   
  40:../src/uda1341ts.c ****     uda1341ts_setvol( VOL_MAX );
 1148              		.loc 1 40 0
 1149 0058 3F00A0E3 		mov	r0, #63
 1150 005c FEFFFFEB 		bl	uda1341ts_setvol
  41:../src/uda1341ts.c **** 
  42:../src/uda1341ts.c ****     uda1341ts_on( UDA_DAC );
 1151              		.loc 1 42 0
 1152 0060 0100A0E3 		mov	r0, #1
 1153 0064 FEFFFFEB 		bl	uda1341ts_on
  43:../src/uda1341ts.c ****     uda1341ts_on( UDA_ADC );
 1154              		.loc 1 43 0
 1155 0068 0200A0E3 		mov	r0, #2
 1156 006c FEFFFFEB 		bl	uda1341ts_on
  44:../src/uda1341ts.c **** }
 1157              		.loc 1 44 0
 1158 0070 0CD04BE2 		sub	sp, fp, #12
 1159 0074 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1160 0078 1EFF2FE1 		bx	lr
 1161              		.cfi_endproc
 1162              	.LFE0:
 1164              		.align	2
 1165              		.global	uda1341ts_mute
 1167              	uda1341ts_mute:
 1168              	.LFB1:
  45:../src/uda1341ts.c **** 
  46:../src/uda1341ts.c **** /*
  47:../src/uda1341ts.c **** ** Habilita/desabilita el silenciado del audio codec
  48:../src/uda1341ts.c **** ** activar/desactivar mute  DATA0[7:6] = 2 y DATA0[2]=1/0 = MUTE
  49:../src/uda1341ts.c **** */
  50:../src/uda1341ts.c **** void uda1341ts_mute( uint8 on )
  51:../src/uda1341ts.c **** {
 1169              		.loc 1 51 0
 1170              		.cfi_startproc
 1171              		@ Function supports interworking.
 1172              		@ args = 0, pretend = 0, frame = 8
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174 007c 0DC0A0E1 		mov	ip, sp
 1175              	.LCFI2:
 1176              		.cfi_def_cfa_register 12
 1177 0080 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1178 0084 04B04CE2 		sub	fp, ip, #4
 1179              		.cfi_offset 14, -8
 1180              		.cfi_offset 13, -12
 1181              		.cfi_offset 11, -16
 1182              	.LCFI3:
 1183              		.cfi_def_cfa 11, 4
 1184 0088 08D04DE2 		sub	sp, sp, #8
 1185 008c 0030A0E1 		mov	r3, r0
 1186 0090 0D304BE5 		strb	r3, [fp, #-13]
  52:../src/uda1341ts.c **** 	/* PLANTILLA DE REG SECUNDARIO
  53:../src/uda1341ts.c **** 	 * Escribir en registro secundario:
  54:../src/uda1341ts.c **** 	 * direccion del modo, 1er.Byte=(dir dispositivo + reg DATA0)*/
  55:../src/uda1341ts.c **** 	//L3_putByte( (ADDRESS << 2) | DATA0, L3_ADDR_MODE  );
  56:../src/uda1341ts.c **** 	/* identificador del reg secundario, 2do.Byte=(prefijo + reg secundario)*/
  57:../src/uda1341ts.c **** 	//L3_putByte( EA | (4), L3_DATA_MODE );
  58:../src/uda1341ts.c **** 	/* dato, 3er.Byte=(prefijo + dato)*/
  59:../src/uda1341ts.c **** 
  60:../src/uda1341ts.c **** 	/* Escribir en registro PRIMARIO:
  61:../src/uda1341ts.c **** 	 * modo direccion, 1er.Byte=(dir dispositivo + reg DATA0)*/
  62:../src/uda1341ts.c **** 	L3_putByte( (ADDRESS << 2) | DATA0, L3_ADDR_MODE  );
 1187              		.loc 1 62 0
 1188 0094 1400A0E3 		mov	r0, #20
 1189 0098 0010A0E3 		mov	r1, #0
 1190 009c FEFFFFEB 		bl	L3_putByte
  63:../src/uda1341ts.c **** 	/* modo dato, 2do.Byte=(dato(8 bits))*/
  64:../src/uda1341ts.c **** 	if(on==MUTE_OFF){
 1191              		.loc 1 64 0
 1192 00a0 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1193 00a4 000053E3 		cmp	r3, #0
 1194 00a8 0300001A 		bne	.L3
  65:../src/uda1341ts.c **** 		L3_putByte( ((2<<6)| (0<<2)), L3_DATA_MODE );
 1195              		.loc 1 65 0
 1196 00ac 8000A0E3 		mov	r0, #128
 1197 00b0 0110A0E3 		mov	r1, #1
 1198 00b4 FEFFFFEB 		bl	L3_putByte
 1199 00b8 020000EA 		b	.L2
 1200              	.L3:
  66:../src/uda1341ts.c **** 	}else{
  67:../src/uda1341ts.c **** 		L3_putByte( ((2<<6)| (1<<2)), L3_DATA_MODE );
 1201              		.loc 1 67 0
 1202 00bc 8400A0E3 		mov	r0, #132
 1203 00c0 0110A0E3 		mov	r1, #1
 1204 00c4 FEFFFFEB 		bl	L3_putByte
 1205              	.L2:
  68:../src/uda1341ts.c **** 	}
  69:../src/uda1341ts.c **** };
 1206              		.loc 1 69 0
 1207 00c8 0CD04BE2 		sub	sp, fp, #12
 1208 00cc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1209 00d0 1EFF2FE1 		bx	lr
 1210              		.cfi_endproc
 1211              	.LFE1:
 1213              		.align	2
 1214              		.global	uda1341ts_on
 1216              	uda1341ts_on:
 1217              	.LFB2:
  70:../src/uda1341ts.c **** /*
  71:../src/uda1341ts.c **** ** Enciende el conversor indicado
  72:../src/uda1341ts.c **** */
  73:../src/uda1341ts.c **** void uda1341ts_on( uint8 converter )
  74:../src/uda1341ts.c **** {
 1218              		.loc 1 74 0
 1219              		.cfi_startproc
 1220              		@ Function supports interworking.
 1221              		@ args = 0, pretend = 0, frame = 8
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 00d4 0DC0A0E1 		mov	ip, sp
 1224              	.LCFI4:
 1225              		.cfi_def_cfa_register 12
 1226 00d8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1227 00dc 04B04CE2 		sub	fp, ip, #4
 1228              		.cfi_offset 14, -8
 1229              		.cfi_offset 13, -12
 1230              		.cfi_offset 11, -16
 1231              	.LCFI5:
 1232              		.cfi_def_cfa 11, 4
 1233 00e0 08D04DE2 		sub	sp, sp, #8
 1234 00e4 0030A0E1 		mov	r3, r0
 1235 00e8 0D304BE5 		strb	r3, [fp, #-13]
  75:../src/uda1341ts.c **** 	/* Escribir en registro PRIMARIO:
  76:../src/uda1341ts.c **** 	 * modo direccion, 1er.Byte=(dir dispositivo + reg DATA0)*/
  77:../src/uda1341ts.c **** 	L3_putByte( (ADDRESS << 2) | STATUS, L3_ADDR_MODE  );
 1236              		.loc 1 77 0
 1237 00ec 1600A0E3 		mov	r0, #22
 1238 00f0 0010A0E3 		mov	r1, #0
 1239 00f4 FEFFFFEB 		bl	L3_putByte
  78:../src/uda1341ts.c **** 	/* modo dato, 2do.Byte=(dato(8 bits))*/
  79:../src/uda1341ts.c **** 	if(converter==UDA_DAC){
 1240              		.loc 1 79 0
 1241 00f8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1242 00fc 010053E3 		cmp	r3, #1
 1243 0100 0900001A 		bne	.L6
  80:../src/uda1341ts.c **** 		L3_putByte( ((1<<7) | (UDA_DAC<<0) | (1<<5)), L3_DATA_MODE );// 6dB ganancia
 1244              		.loc 1 80 0
 1245 0104 A100A0E3 		mov	r0, #161
 1246 0108 0110A0E3 		mov	r1, #1
 1247 010c FEFFFFEB 		bl	L3_putByte
  81:../src/uda1341ts.c **** 		state |=(UDA_DAC);
 1248              		.loc 1 81 0
 1249 0110 44309FE5 		ldr	r3, .L8
 1250 0114 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1251 0118 013083E3 		orr	r3, r3, #1
 1252 011c FF2003E2 		and	r2, r3, #255
 1253 0120 34309FE5 		ldr	r3, .L8
 1254 0124 0020C3E5 		strb	r2, [r3, #0]
 1255 0128 080000EA 		b	.L5
 1256              	.L6:
  82:../src/uda1341ts.c **** 	}else{
  83:../src/uda1341ts.c **** 		L3_putByte( ((1<<7) | (UDA_ADC<<0) | (1<<5)), L3_DATA_MODE );// 6dB ganancia
 1257              		.loc 1 83 0
 1258 012c A200A0E3 		mov	r0, #162
 1259 0130 0110A0E3 		mov	r1, #1
 1260 0134 FEFFFFEB 		bl	L3_putByte
  84:../src/uda1341ts.c **** 		state |=(1<<4);
 1261              		.loc 1 84 0
 1262 0138 1C309FE5 		ldr	r3, .L8
 1263 013c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1264 0140 103083E3 		orr	r3, r3, #16
 1265 0144 FF2003E2 		and	r2, r3, #255
 1266 0148 0C309FE5 		ldr	r3, .L8
 1267 014c 0020C3E5 		strb	r2, [r3, #0]
 1268              	.L5:
  85:../src/uda1341ts.c **** 	}
  86:../src/uda1341ts.c **** }
 1269              		.loc 1 86 0
 1270 0150 0CD04BE2 		sub	sp, fp, #12
 1271 0154 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1272 0158 1EFF2FE1 		bx	lr
 1273              	.L9:
 1274              		.align	2
 1275              	.L8:
 1276 015c 01000000 		.word	state
 1277              		.cfi_endproc
 1278              	.LFE2:
 1280              		.align	2
 1281              		.global	uda1341ts_off
 1283              	uda1341ts_off:
 1284              	.LFB3:
  87:../src/uda1341ts.c **** 
  88:../src/uda1341ts.c **** void uda1341ts_off( uint8 converter )
  89:../src/uda1341ts.c **** {
 1285              		.loc 1 89 0
 1286              		.cfi_startproc
 1287              		@ Function supports interworking.
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0160 0DC0A0E1 		mov	ip, sp
 1291              	.LCFI6:
 1292              		.cfi_def_cfa_register 12
 1293 0164 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1294 0168 04B04CE2 		sub	fp, ip, #4
 1295              		.cfi_offset 14, -8
 1296              		.cfi_offset 13, -12
 1297              		.cfi_offset 11, -16
 1298              	.LCFI7:
 1299              		.cfi_def_cfa 11, 4
 1300 016c 08D04DE2 		sub	sp, sp, #8
 1301 0170 0030A0E1 		mov	r3, r0
 1302 0174 0D304BE5 		strb	r3, [fp, #-13]
  90:../src/uda1341ts.c ****     /* Escribir en registro PRIMARIO:
  91:../src/uda1341ts.c **** 	 * modo direccion, 1er.Byte=(dir dispositivo + reg DATA0)*/
  92:../src/uda1341ts.c **** 	L3_putByte( (ADDRESS << 2) | STATUS, L3_ADDR_MODE  );
 1303              		.loc 1 92 0
 1304 0178 1600A0E3 		mov	r0, #22
 1305 017c 0010A0E3 		mov	r1, #0
 1306 0180 FEFFFFEB 		bl	L3_putByte
  93:../src/uda1341ts.c **** 	/* modo dato, 2do.Byte=(dato(8 bits))*/
  94:../src/uda1341ts.c **** 	if(converter==UDA_DAC){
 1307              		.loc 1 94 0
 1308 0184 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1309 0188 010053E3 		cmp	r3, #1
 1310 018c 0600001A 		bne	.L11
  95:../src/uda1341ts.c **** 		L3_putByte( ((1<<7) | (0<<0) | (1<<5)), L3_DATA_MODE );// 6dB ganancia
 1311              		.loc 1 95 0
 1312 0190 A000A0E3 		mov	r0, #160
 1313 0194 0110A0E3 		mov	r1, #1
 1314 0198 FEFFFFEB 		bl	L3_putByte
  96:../src/uda1341ts.c **** 		state =(0<<0);
 1315              		.loc 1 96 0
 1316 019c 2C309FE5 		ldr	r3, .L13
 1317 01a0 0020A0E3 		mov	r2, #0
 1318 01a4 0020C3E5 		strb	r2, [r3, #0]
 1319 01a8 050000EA 		b	.L10
 1320              	.L11:
  97:../src/uda1341ts.c **** 	}else{
  98:../src/uda1341ts.c **** 		L3_putByte( ((1<<7) | (0<<1) | (1<<5)), L3_DATA_MODE );// 6dB ganancia
 1321              		.loc 1 98 0
 1322 01ac A000A0E3 		mov	r0, #160
 1323 01b0 0110A0E3 		mov	r1, #1
 1324 01b4 FEFFFFEB 		bl	L3_putByte
  99:../src/uda1341ts.c **** 		state =(0<<4);
 1325              		.loc 1 99 0
 1326 01b8 10309FE5 		ldr	r3, .L13
 1327 01bc 0020A0E3 		mov	r2, #0
 1328 01c0 0020C3E5 		strb	r2, [r3, #0]
 1329              	.L10:
 100:../src/uda1341ts.c **** 	}
 101:../src/uda1341ts.c **** }
 1330              		.loc 1 101 0
 1331 01c4 0CD04BE2 		sub	sp, fp, #12
 1332 01c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1333 01cc 1EFF2FE1 		bx	lr
 1334              	.L14:
 1335              		.align	2
 1336              	.L13:
 1337 01d0 01000000 		.word	state
 1338              		.cfi_endproc
 1339              	.LFE3:
 1341              		.align	2
 1342              		.global	uda1341ts_status
 1344              	uda1341ts_status:
 1345              	.LFB4:
 102:../src/uda1341ts.c **** 
 103:../src/uda1341ts.c **** uint8 uda1341ts_status( uint8 converter )
 104:../src/uda1341ts.c **** {
 1346              		.loc 1 104 0
 1347              		.cfi_startproc
 1348              		@ Function supports interworking.
 1349              		@ args = 0, pretend = 0, frame = 8
 1350              		@ frame_needed = 1, uses_anonymous_args = 0
 1351 01d4 0DC0A0E1 		mov	ip, sp
 1352              	.LCFI8:
 1353              		.cfi_def_cfa_register 12
 1354 01d8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1355 01dc 04B04CE2 		sub	fp, ip, #4
 1356              		.cfi_offset 14, -8
 1357              		.cfi_offset 13, -12
 1358              		.cfi_offset 11, -16
 1359              	.LCFI9:
 1360              		.cfi_def_cfa 11, 4
 1361 01e0 08D04DE2 		sub	sp, sp, #8
 1362 01e4 0030A0E1 		mov	r3, r0
 1363 01e8 0D304BE5 		strb	r3, [fp, #-13]
 105:../src/uda1341ts.c **** 	if(converter==UDA_DAC){
 1364              		.loc 1 105 0
 1365 01ec 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1366 01f0 010053E3 		cmp	r3, #1
 1367 01f4 0400001A 		bne	.L16
 106:../src/uda1341ts.c **** 		return (state>>3);
 1368              		.loc 1 106 0
 1369 01f8 2C309FE5 		ldr	r3, .L18
 1370 01fc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1371 0200 A331A0E1 		mov	r3, r3, lsr #3
 1372 0204 FF3003E2 		and	r3, r3, #255
 1373 0208 030000EA 		b	.L17
 1374              	.L16:
 107:../src/uda1341ts.c **** 	}else{
 108:../src/uda1341ts.c **** 		return (state<<4);
 1375              		.loc 1 108 0
 1376 020c 18309FE5 		ldr	r3, .L18
 1377 0210 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1378 0214 0332A0E1 		mov	r3, r3, asl #4
 1379 0218 FF3003E2 		and	r3, r3, #255
 1380              	.L17:
 109:../src/uda1341ts.c **** 	}
 110:../src/uda1341ts.c **** }
 1381              		.loc 1 110 0
 1382 021c 0300A0E1 		mov	r0, r3
 1383 0220 0CD04BE2 		sub	sp, fp, #12
 1384 0224 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1385 0228 1EFF2FE1 		bx	lr
 1386              	.L19:
 1387              		.align	2
 1388              	.L18:
 1389 022c 01000000 		.word	state
 1390              		.cfi_endproc
 1391              	.LFE4:
 1393              		.align	2
 1394              		.global	uda1341ts_setvol
 1396              	uda1341ts_setvol:
 1397              	.LFB5:
 111:../src/uda1341ts.c **** 
 112:../src/uda1341ts.c **** void uda1341ts_setvol( uint8 vol )
 113:../src/uda1341ts.c **** {
 1398              		.loc 1 113 0
 1399              		.cfi_startproc
 1400              		@ Function supports interworking.
 1401              		@ args = 0, pretend = 0, frame = 8
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0230 0DC0A0E1 		mov	ip, sp
 1404              	.LCFI10:
 1405              		.cfi_def_cfa_register 12
 1406 0234 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1407 0238 04B04CE2 		sub	fp, ip, #4
 1408              		.cfi_offset 14, -8
 1409              		.cfi_offset 13, -12
 1410              		.cfi_offset 11, -16
 1411              	.LCFI11:
 1412              		.cfi_def_cfa 11, 4
 1413 023c 08D04DE2 		sub	sp, sp, #8
 1414 0240 0030A0E1 		mov	r3, r0
 1415 0244 0D304BE5 		strb	r3, [fp, #-13]
 114:../src/uda1341ts.c **** 	/* Escribir en registro PRIMARIO:
 115:../src/uda1341ts.c **** 		 * modo direccion, 1er.Byte=(dir dispositivo + reg DATA0)*/
 116:../src/uda1341ts.c **** 		L3_putByte( (ADDRESS << 2) | DATA0, L3_ADDR_MODE  );
 1416              		.loc 1 116 0
 1417 0248 1400A0E3 		mov	r0, #20
 1418 024c 0010A0E3 		mov	r1, #0
 1419 0250 FEFFFFEB 		bl	L3_putByte
 117:../src/uda1341ts.c **** 		/* modo dato, 2do.Byte=(dato(8 bits))*/
 118:../src/uda1341ts.c **** 		L3_putByte( ((00<<6) | (vol>>2)), L3_DATA_MODE );
 1420              		.loc 1 118 0
 1421 0254 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1422 0258 2331A0E1 		mov	r3, r3, lsr #2
 1423 025c FF3003E2 		and	r3, r3, #255
 1424 0260 0300A0E1 		mov	r0, r3
 1425 0264 0110A0E3 		mov	r1, #1
 1426 0268 FEFFFFEB 		bl	L3_putByte
 119:../src/uda1341ts.c **** 		volume=vol;
 1427              		.loc 1 119 0
 1428 026c 10309FE5 		ldr	r3, .L21
 1429 0270 0D205BE5 		ldrb	r2, [fp, #-13]
 1430 0274 0020C3E5 		strb	r2, [r3, #0]
 120:../src/uda1341ts.c **** };
 1431              		.loc 1 120 0
 1432 0278 0CD04BE2 		sub	sp, fp, #12
 1433 027c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1434 0280 1EFF2FE1 		bx	lr
 1435              	.L22:
 1436              		.align	2
 1437              	.L21:
 1438 0284 00000000 		.word	volume
 1439              		.cfi_endproc
 1440              	.LFE5:
 1442              		.align	2
 1443              		.global	uda1341ts_getvol
 1445              	uda1341ts_getvol:
 1446              	.LFB6:
 121:../src/uda1341ts.c **** 
 122:../src/uda1341ts.c **** uint8 uda1341ts_getvol( void )
 123:../src/uda1341ts.c **** {
 1447              		.loc 1 123 0
 1448              		.cfi_startproc
 1449              		@ Function supports interworking.
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452 0288 0DC0A0E1 		mov	ip, sp
 1453              	.LCFI12:
 1454              		.cfi_def_cfa_register 12
 1455 028c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1456 0290 04B04CE2 		sub	fp, ip, #4
 1457              		.cfi_offset 14, -8
 1458              		.cfi_offset 13, -12
 1459              		.cfi_offset 11, -16
 1460              	.LCFI13:
 1461              		.cfi_def_cfa 11, 4
 124:../src/uda1341ts.c ****     return volume;
 1462              		.loc 1 124 0
 1463 0294 10309FE5 		ldr	r3, .L24
 1464 0298 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 125:../src/uda1341ts.c **** };
 1465              		.loc 1 125 0
 1466 029c 0300A0E1 		mov	r0, r3
 1467 02a0 0CD04BE2 		sub	sp, fp, #12
 1468 02a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1469 02a8 1EFF2FE1 		bx	lr
 1470              	.L25:
 1471              		.align	2
 1472              	.L24:
 1473 02ac 00000000 		.word	volume
 1474              		.cfi_endproc
 1475              	.LFE6:
 1477              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uda1341ts.c
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1097   .bss:00000000 volume
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1098   .bss:00000000 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1099   .bss:00000001 state
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1102   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1105   .text:00000000 uda1341ts_init
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1396   .text:00000230 uda1341ts_setvol
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1216   .text:000000d4 uda1341ts_on
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1167   .text:0000007c uda1341ts_mute
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1276   .text:0000015c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1280   .text:00000160 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1283   .text:00000160 uda1341ts_off
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1337   .text:000001d0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1341   .text:000001d4 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1344   .text:000001d4 uda1341ts_status
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1389   .text:0000022c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1393   .text:00000230 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1438   .text:00000284 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1442   .text:00000288 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1445   .text:00000288 uda1341ts_getvol
C:\Users\USUARI~1\AppData\Local\Temp\ccxgVoPc.s:1473   .text:000002ac $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
L3_init
L3_putByte
